#pragma once

#include <iostream>
#include <vector>

class Set {

public:
  Set();                                     // new empty set
  Set(const Set &) = default;                // = default; forces copy constructor to be generated by compiler. // https://en.cppreference.com/w/cpp/language/copy_constructor
  Set &operator=(const Set &other_set);      // make set equal to other_set. Standard copy constructor used. Should be fine?
  Set operator+(const Set &other_set) const; // union of two sets
  Set &operator+=(int element);              // insert element into set
  int operator[](size_t index) const;        // array subscript. https://en.cppreference.com/w/cpp/language/operators
  // parameter should be size_t since vector uses size_t??

  // use friend so we can have access to set.elements
  friend std::ostream &operator<<(std::ostream &out, const Set &set);

  bool exists(int element) const;

private:
  std::vector<int> elements;
};
